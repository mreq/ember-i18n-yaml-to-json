{"name":"Ember-i18n-yaml-to-json","tagline":"Convert i18n translations from yaml to json, so that you can maintain your translations at one place.","body":"# ember-i18n-yaml-to-json\r\n\r\nThis README outlines the details of collaborating on this Ember addon.\r\n\r\n## Installation\r\n\r\n* `ember install ember-i18n-yaml-to-json`\r\n\r\n* In your Brocfile add the following at the top and before any build related activities.<br/>\r\n   \r\n  var yamlToJsonEngine = require('ember-i18n-yaml-to-json').engine;<br/>\r\n   yamlToJsonEngine.convert();<br/>\r\n\r\n* `ember build --yaml-path=<YAML_PATH> --js-path=<JS_PATH> --default-locale=en`\r\n\r\n\r\nThis addon will help those who juggle between yml & js for i18n translations. If you are using yml file(as in Ruby on Rails \"config/locales\") for your backend translations and js file (as in ember-i18n \"app/locales/en/translations\") for frontend translations. It will enable you to maintain your i18n translations in a centralized location(.yml) by converting all your translation file to js format during \"ember build\". It also has a fallback mechanism with en.yml as reference doc, any missing key will grab the value from en.yml during conversion.\r\n\r\nPS: this addon currently supports the locale path format as in ember-i18n, i.e., your yml files will be placed at <JS_PATH>/<locale>/translations.js","google":"UA-451080-7","note":"Don't delete this file! It's used internally to help with page regeneration."}